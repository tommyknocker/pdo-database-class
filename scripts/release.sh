#!/bin/bash
set -e

VERSION=$1

if [ -z "$VERSION" ]; then
    echo "Usage: ./scripts/release.sh <version>"
    echo "Example: ./scripts/release.sh 2.5.0"
    exit 1
fi

TAG="v${VERSION}"

echo "üìã Preparing release ${TAG}..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –Ω–µ—Ç uncommitted changes
if [ -n "$(git status --porcelain)" ]; then
    echo "‚ùå You have uncommitted changes. Commit or stash them first."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –Ω–∞ master
BRANCH=$(git rev-parse --abbrev-ref HEAD)
if [ "$BRANCH" != "master" ]; then
    echo "‚ùå You must be on master branch. Current: $BRANCH"
    exit 1
fi

# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
echo "üß™ Running tests..."
./vendor/bin/phpunit

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏ –≤ composer.json (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
echo "üìù Updating composer.json..."
sed -i "s/\"version\": \".*\"/\"version\": \"${VERSION}\"/" composer.json

# –ö–æ–º–º–∏—Ç
git add composer.json
git commit -m "chore: bump version to ${VERSION}"

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–≥–∞
echo "üè∑Ô∏è  Creating tag ${TAG}..."
git tag -a "${TAG}" -m "Release ${TAG}"

# Push
echo "üì§ Pushing to origin..."
git push origin master
git push origin "${TAG}"

echo "‚úÖ Release ${TAG} created successfully!"
echo "üì¶ Don't forget to create GitHub Release at:"
echo "   https://github.com/tommyknocker/pdo-database-class/releases/new?tag=${TAG}"
