{
  "name": "tommyknocker/pdo-database-class",
  "description": "Lightweight PHP database library with unified API for MySQL, PostgreSQL & SQLite. QueryBuilder, caching, window functions, CTEs, JSON, ActiveRecord with validation, 80+ helpers.",
  "type": "library",
  "keywords": [
    "pdo",
    "pdodb",
    "pdo-db",
    "query-builder",
    "sql-builder",
    "database-abstraction-layer",
    "database-abstraction",
    "dbal",
    "fluent-api",
    "mysql",
    "postgresql",
    "sqlite",
    "database",
    "prepared-statements",
    "prepared-statement-pool",
    "statement-caching",
    "lru-cache",
    "query-caching",
    "psr-16",
    "read-write-splitting",
    "load-balancing",
    "master-replica",
    "window-functions",
    "cte",
    "common-table-expressions",
    "recursive-cte",
    "set-operations",
    "union",
    "intersect",
    "except",
    "distinct-on",
    "filter-clause",
    "full-text-search",
    "pagination",
    "cursor-pagination",
    "schema-introspection",
    "upsert",
    "bulk-insert",
    "bulk-operations",
    "transactions",
    "connection-pooling",
    "csv-loader",
    "xml-loader",
    "json-loader",
    "export-helpers",
    "helper-functions",
    "sql-helpers",
    "activerecord",
    "orm",
    "validation",
    "validators",
    "model-validation",
    "declarative-validation",
    "rules-based-validation",
    "static-analysis",
    "type-safe",
    "security",
    "sql-injection",
    "php8",
    "lightweight",
    "cross-platform",
    "performance"
  ],
  "homepage": "https://github.com/tommyknocker/pdo-database-class",
  "license": "MIT",
  "support": {
    "issues": "https://github.com/tommyknocker/pdo-database-class/issues"
  },
  "authors": [
    {
      "name": "Vasiliy Krivoplyas",
      "email": "vasiliy@krivoplyas.com"
    }
  ],
  "require": {
    "php": "^8.4",
    "ext-pdo": "*",
    "psr/log": "^3.0",
    "psr/simple-cache": "^3.0",
    "psr/event-dispatcher": "^1.0"
  },
  "suggest": {
    "monolog/monolog": "If you need robust logging capabilities.",
    "symfony/cache": "For query result caching (PSR-16 implementation)",
    "cache/filesystem-adapter": "Filesystem-based cache implementation",
    "ext-apcu": "For APCu-based query caching",
    "ext-redis": "For Redis-based query caching",
    "ext-simplexml": "For bulk XML insert support",
    "ext-xmlreader": "For bulk XML insert support",
    "ext-xmlwriter": "For XML export support"
  },
  "require-dev": {
    "phpunit/phpunit": "^12.0",
    "monolog/monolog": "^3.9",
    "phpstan/phpstan": "^2.0",
    "phpstan/phpstan-phpunit": "^2.0",
    "friendsofphp/php-cs-fixer": "^3.89",
    "infection/infection": "^0.31"
  },
  "autoload": {
    "psr-4": {
      "tommyknocker\\pdodb\\": "src/"
    }
  },
  "autoload-dev": {
    "psr-4": {
      "tommyknocker\\pdodb\\tests\\": "tests/"
    }
  },
  "scripts": {
    "test": "phpunit",
    "test:mysql": "phpunit tests/mysql/*Tests.php",
    "test:postgresql": "phpunit tests/postgresql/*Tests.php",
    "test:sqlite": "phpunit tests/sqlite/*Tests.php",
    "test:shared": "phpunit tests/shared/*Tests.php",
    "phpstan": "phpstan analyse",
    "cs-fix": "php-cs-fixer fix",
    "cs-check": "php-cs-fixer fix --dry-run --diff",
    "test-examples": "bash scripts/test-examples.sh",
    "quality-check": "bash scripts/quality-check.sh",
    "infection": "infection",
    "infection:quick": "infection --min-msi=50 --min-covered-msi=60 --threads=4",
    "infection:ci": "infection --min-msi=70 --min-covered-msi=75 --logger-github",
    "check": [
      "@phpstan",
      "@test",
      "@test-examples"
    ],
    "check-all": [
      "@phpstan",
      "@cs-check",
      "@test",
      "@test-examples",
      "@fix-markdown"
    ],
    "check-all-with-infection": [
      "@phpstan",
      "@cs-check",
      "@test",
      "@test-examples",
      "@infection:ci"
    ],
    "fix-all": [
      "@cs-fix",
      "@test"
    ],
    "fix-markdown": "bash scripts/fix-markdown-eof.sh"
  },
  "config": {
    "allow-plugins": {
      "infection/extension-installer": true
    }
  }
}
